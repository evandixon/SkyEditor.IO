//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SkyEditor.IO.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SkyEditor.IO.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read more than int.MaxValue bytes into memory.
        /// </summary>
        internal static string Binary_ErrorLengthTooLarge {
            get {
                return ResourceManager.GetString("Binary_ErrorLengthTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to write to read-only data..
        /// </summary>
        internal static string Binary_ErrorReadOnly {
            get {
                return ResourceManager.GetString("Binary_ErrorReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to save the file without having ever specified a filename..
        /// </summary>
        internal static string BinaryFile_ErrorSavedWithoutFilenameOrFilesystem {
            get {
                return ResourceManager.GetString("BinaryFile_ErrorSavedWithoutFilenameOrFilesystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to resize a file in such a way that the file needed to be closed and reopened when the file cannot be closed..
        /// </summary>
        internal static string BinaryFile_NotAllowedToCloseFile {
            get {
                return ResourceManager.GetString("BinaryFile_NotAllowedToCloseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying data source does not support a length of the given size..
        /// </summary>
        internal static string BinaryFile_SetLength_SizeToLarge {
            get {
                return ResourceManager.GetString("BinaryFile_SetLength_SizeToLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a file at the given path..
        /// </summary>
        internal static string FileSystem_InMemoryFileSystem_FileNotFound {
            get {
                return ResourceManager.GetString("FileSystem_InMemoryFileSystem_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find an entry with the given file path..
        /// </summary>
        internal static string FileSystem_ZipFileSystem_EntryNotFound {
            get {
                return ResourceManager.GetString("FileSystem_ZipFileSystem_EntryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested file is too large to read as an array..
        /// </summary>
        internal static string FileSystem_ZipFileSystem_ReadAllBytes_FileTooLarge {
            get {
                return ResourceManager.GetString("FileSystem_ZipFileSystem_ReadAllBytes_FileTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to write more data than is allocated by the current data accessor.
        /// </summary>
        internal static string WriteOnlyBinaryDataAccessor_SourceDataTooLarge {
            get {
                return ResourceManager.GetString("WriteOnlyBinaryDataAccessor_SourceDataTooLarge", resourceCulture);
            }
        }
    }
}
